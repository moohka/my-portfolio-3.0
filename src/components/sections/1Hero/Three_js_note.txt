inside useEffect...


1. create a scene
    const scene = new THREE.Scene();


2. create a mesh = material + geometry
    a. geometry = shape
        const geometry = new THREE.SphereGeometry(4, 100, 100); 
        //(size, width pixel, height pixel)
    b. material = surface
        const material = new THREE.MeshStandardMaterial({ color: 0xdddddd , roughness: 0.2});
        //styles like color, texture, etc.

    const mesh = new THREE.Mesh(geometry, material);


3. create a light
    const light = new THREE.PointLight(0xffffff, 1, 1000);
    //color, intensity, distance, decay(light dim over distance)

    light.position.set(0, 10, 10);
    //x, y, z

    light.intensity = 1.5 //default is 1

    a. create a ambient light
    - to make material white since there is no white dark and black light
    var whiteLight = new THREE.AmbientLight(0xfdfdfd, 1);


4. create a camera
    const camera = new THREE.PerspectiveCamera(
      75,
      document.documentElement.clientWidth /
        document.documentElement.clientHeight,
      0.1,
      1000
    );
    //(camera angle, aspect ratio, near clipping point, far clipping point)

    camera.position.z = 20; //smaller the number, the bigger object.
  

5. create a renderer
    - with <canvas/> tag 
    const canvasRef = useRef();
    const render = new THREE.WebGLRenderer({canvasRef});
    renderer.setSize(800,600);


6. ADD mesh and light to scene
    scene.add(mesh);
    scene.add(light);


7. RENDER scene and camera
    renderer.render(scene, camera);


